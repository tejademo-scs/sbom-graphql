name: Build & Test
 
on: [pull_request,push]
 
jobs:
  scan:
    name: Code Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners config,vuln,secret .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          AQUA_URL: https://api.eu-1.supply-chain.cloud.aquasec.com
          CSPM_URL: https://eu-1.api.cloudsploit.com
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)
 
  test:
    name: Build and Test
    runs-on: ubuntu-20.04
    needs: scan
    steps:
      - uses: actions/checkout@v3
 

 
      - uses: actions/setup-python@v4
        with:
          python-version: '3.6'
          cache: 'pip'
      - run: pip install -r requirements.txt
 
      - name: Run DVGA
        run: |
          nohup python3 ./app.py &
      - name: Wait for server (sleep 5 secs)
        run: |
          sleep 180
      - name: Run DVGA Tests
        run: |
          python3 -m pytest tests/*
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v3
      # Added for SBOM generation
      - name: Build Docker Image
        run: docker build -t knightfortheright/mytest:v3 .
      - name: Manifest Generation
        run: |
          export BILLY_SERVER=https://billy.eu-1.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://eu-1.api.cloudsploit.com \
            --artifact-path knightfortheright/mytest:v3
